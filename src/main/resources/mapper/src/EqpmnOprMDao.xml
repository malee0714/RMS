<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lims.src.dao.EqpmnOprMDao">

	<sql id="bplcCode">'${@lims.util.GetUserSession@getBestInspctInsttCode()}'</sql>

	<!-- 장비 가동/가용률 조회 -->
	<select id="getParMonTU" parameterType="lims.src.vo.EqpmnOprManageDto" resultType="lims.src.vo.EqpmnOprManageDto">
		SELECT
           	A.EQPMN_CL_CODE
			, (SELECT SCC.CMMN_CODE_NM FROM SY_CMMN_CODE SCC WHERE SCC.CMMN_CODE = A.EQPMN_CL_CODE) AS EQPMN_CL_NM
			, A.EQPMN_SEQNO
			, A.EQPMN_NM
			, A.EQPMN_MANAGE_NO
			, A.CHRG_DEPT_CODE
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '01' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_1
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '01' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '01' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_1
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '01' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_1
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '02' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_2
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '02' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '02' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_2
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '02' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_2
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '03' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_3
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '03' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '03' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_3
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '03' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_3
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '04' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_4
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '04' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '04' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_4
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '04' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_4
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '05' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_5
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '05' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '05' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_5
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '05' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_5
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '06' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_6
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '06' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '06' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_6
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '06' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_6
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '07' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_7
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '07' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '07' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_7
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '07' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_7
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '08' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_8
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '08' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '08' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_8
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '08' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_8
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '09' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_9
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '09' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '09' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_9
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '09' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_9
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '10' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_10
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '10' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '10' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_10
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '10' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_10
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '11' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_11
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '11' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '11' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_11
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '11' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_11
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '12' THEN (B.CNT / (D.SYS_DTE_NUM*(B.ANALS_REQRE_TIME/60)))*100 ELSE 0 END),1),0) AS MON_OP_12
			, NVL(ROUND(SUM(CASE WHEN B.CNT <![CDATA[>]]> 0 THEN CASE WHEN E.STOP_MNTH = '12' THEN (((D.SYS_DTE_NUM*24) - E.STOP_TIME) / (D.SYS_DTE_NUM*24)) * 100 ELSE CASE WHEN B.MNTH = '12' THEN 100 ELSE 0 END END ELSE 0 END),1),0) AS MON_US_12
			, NVL(ROUND(SUM(CASE WHEN B.MNTH = '12' THEN B.CNT ELSE 0 END),1),0) AS MON_CNT_12
        FROM RS_EQPMN A
        
        -- 월별 장비가동시간과 건수
        LEFT OUTER JOIN (
          				SELECT
          					IA.EQPMN_SEQNO
          					, IA.SYS_MNTH AS MNTH -- 월
          					, IB.MNTH_OPR_TIME    -- 월별 가동시간 (소요시간*건수)
          					, IB.CNT              -- 가동건수
          					, IB.ANALS_REQRE_TIME -- 분석소요시간
          				FROM (
							SELECT  -- 장비:월 (1:1)
								IBB.EQPMN_SEQNO
								,IAA.SYS_MNTH
							FROM (   -- 해당연도 모든 월 ('MM')
								SELECT TO_CHAR(IIIA.DTE, 'MM') AS SYS_MNTH FROM (
									SELECT ADD_MONTHS(TO_DATE(#{yearSch}||'01', 'YYYYMM'), (LEVEL-1)) AS DTE FROM DUAL
									CONNECT BY ADD_MONTHS(TO_DATE(#{yearSch}||'01', 'YYYYMM'), (LEVEL-1)) <![CDATA[<=]]> ADD_MONTHS(TO_DATE(#{yearSch}||'01', 'YYYYMM'), 11)
								) IIIA GROUP BY TO_CHAR(DTE, 'MM')
							) IAA
							FULL OUTER JOIN RS_EQPMN IBB ON 1=1
          				) IA 
          				LEFT JOIN (
							SELECT
								A.EQPMN_SEQNO
								, (COUNT(*) * B.ANALS_REQRE_TIME) AS MNTH_OPR_TIME -- 월별 총 가동시간
								, COUNT(*) CNT -- 월별 총 가동횟수
								, TO_CHAR(TO_DATE(A.OPR_DTE,'YYYY-MM-DD'),'MM') AS MNTH -- 월
								, B.ANALS_REQRE_TIME  -- 장비분석소요시간
							FROM IM_EQPMN_OPR_SPLORE A
							JOIN RS_EQPMN B ON A.EQPMN_SEQNO = B.EQPMN_SEQNO
							WHERE A.OPR_DTE BETWEEN NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-01-01' AND NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-12-31'
							  AND B.ANALS_REQRE_TIME > 0
							  AND B.BPLC_CODE = <include refid="bplcCode"/>
							<if test="chrgDeptCodeSch != null and chrgDeptCodeSch != ''">
								AND B.CHRG_DEPT_CODE = #{chrgDeptCodeSch}
							</if>
							GROUP BY A.EQPMN_SEQNO
							       , TO_CHAR(TO_DATE(A.OPR_DTE,'YYYY-MM-DD'), 'MM')
							       , B.EQPMN_CL_CODE
							       , B.ANALS_REQRE_TIME
				        ) IB ON IA.SYS_MNTH = IB.MNTH AND IA.EQPMN_SEQNO = IB.EQPMN_SEQNO   
						ORDER BY IA.EQPMN_SEQNO, IA.SYS_MNTH
		) B ON B.EQPMN_SEQNO = A.EQPMN_SEQNO 
		
		-- 장비별 월 가동시간
        LEFT OUTER JOIN (
			SELECT
				IA.EQPMN_SEQNO
				, SUM(IA.CNT) AS EQPMN_OPR_NUM -- 월별 총 가동시간
				, IA.MNTH_EQ -- 월
			FROM (
				SELECT
					A.EQPMN_SEQNO
					, A.OPR_DTE
					, (COUNT(*) * B.ANALS_REQRE_TIME) AS CNT
					, TO_CHAR(TO_DATE(A.OPR_DTE,'YYYY-MM-DD'), 'MM') AS MNTH_EQ
				FROM IM_EQPMN_OPR_SPLORE A
				JOIN RS_EQPMN B ON A.EQPMN_SEQNO = B.EQPMN_SEQNO
				WHERE B.ANALS_REQRE_TIME > 0
				<if test="chrgDeptCodeSch != null and chrgDeptCodeSch != ''">
					AND B.CHRG_DEPT_CODE = #{chrgDeptCodeSch}
				</if>
				GROUP BY A.EQPMN_SEQNO
				       , TO_CHAR(TO_DATE(A.OPR_DTE,'YYYY-MM-DD'),'MM')
				       , B.ANALS_REQRE_TIME, A.OPR_DTE
			) IA
			WHERE IA.OPR_DTE BETWEEN NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-01-01' AND NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-12-31'
			GROUP BY IA.EQPMN_SEQNO, IA.MNTH_EQ
        ) C ON C.EQPMN_SEQNO = A.EQPMN_SEQNO AND C.MNTH_EQ = B.MNTH
        
        -- 해당연도 월별 일수
        LEFT OUTER JOIN (
			SELECT
				TO_CHAR(IIIA.DTE, 'MM') AS SYS_MNTH -- 월
				, COUNT(IIIA.DTE) AS SYS_DTE_NUM -- 일수
			FROM (  --  LEVEL값을 365(1년)까지로 제한. 해당 년도의 01-01일, 01-02일을 제외한 모든 날짜 + 다음년도  01-01일, 01-02일 출력
				SELECT TO_DATE(NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-01-01', 'YYYY-MM-DD')+LEVEL+1 AS DTE FROM DUAL
				CONNECT BY LEVEL-1 <![CDATA[ <= ]]> TO_DATE(NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-12-31', 'YYYY-MM-DD') - TO_DATE(NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-01-01', 'YYYY-MM-DD')
			) IIIA
			GROUP BY TO_CHAR(DTE, 'MM')
        ) D ON D.SYS_MNTH = B.MNTH
        
        -- 해당연도 장비별 수리시간, 수리한 달
        LEFT OUTER JOIN (
            SELECT 
            	B.EQPMN_SEQNO
            	, NVL(SUM(ROUND((A.REPAIR_END_DT-A.REPAIR_BEGIN_DT)*24,2)),0) AS STOP_TIME -- 총 수리시간 (시간 단위)
            	, TO_CHAR(TO_DATE(A.REPAIR_BEGIN_DT, 'YYYY-MM-DD HH24:MI:SS'),'MM') AS STOP_MNTH -- 수리한 달
            FROM RS_EQPMN_REPAIR_HIST A 
            JOIN RS_EQPMN B ON A.EQPMN_SEQNO = B.EQPMN_SEQNO
            WHERE A.REPAIR_BEGIN_DT IS NOT NULL
              AND TO_CHAR(TO_DATE(A.REPAIR_BEGIN_DT, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD') BETWEEN NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-01-01' AND NVL(#{yearSch}, TO_CHAR(SYSDATE,'YYYY'))||'-12-31'
            GROUP BY B.EQPMN_SEQNO
                   , TO_CHAR(TO_DATE(A.REPAIR_BEGIN_DT, 'YYYY-MM-DD HH24:MI:SS'),'MM')
        ) E ON E.EQPMN_SEQNO = A.EQPMN_SEQNO AND E.STOP_MNTH = B.MNTH
        
        WHERE 1=1
   		  AND A.DELETE_AT = 'N' AND A.USE_AT = 'Y'
          AND A.DSUSE_RESN IS NULL
          AND A.DSUSE_DTE IS NULL
	 	  AND A.BPLC_CODE = <include refid="bplcCode"/>
        <if test="chrgDeptCodeSch != null and chrgDeptCodeSch != ''">
	  		AND A.CHRG_DEPT_CODE = #{chrgDeptCodeSch}
        </if>
        <if test="eqpmnClCodeSch != null and eqpmnClCodeSch != ''">
            AND A.EQPMN_CL_CODE = #{eqpmnClCodeSch}
        </if>
        <if test="eqpmnNmSch != null and eqpmnNmSch != ''">
            AND UPPER(A.EQPMN_NM) LIKE '%'||UPPER(TRIM(#{eqpmnNmSch}))||'%'
        </if>
        GROUP BY A.EQPMN_SEQNO
			   , A.EQPMN_CL_CODE
           	   , A.EQPMN_NM
           	   , A.EQPMN_MANAGE_NO
           	   , A.CHRG_DEPT_CODE
        ORDER BY A.EQPMN_CL_CODE, A.EQPMN_SEQNO
	</select>
	
</mapper>
