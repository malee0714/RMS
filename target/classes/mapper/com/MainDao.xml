<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lims.com.dao.MainDao">
	<sql id="bplcCode">'${@lims.util.GetUserSession@getBestInspctInsttCode()}'</sql>
<select id="getSelProEa" resultType="lims.com.vo.MainVo" parameterType="lims.com.vo.MainVo">
	<!-- SELECT 
	    NVL(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000002' THEN '1' END),0) ONE,
	    NVL(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000003' THEN '1' END),0) TWO,
	    NVL(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000004' THEN '1' END),0) THR,
	    NVL(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000005' THEN '1' END),0) FOU,
	    NVL(SUM(CASE WHEN LAST_PROCESS_DT BETWEEN SYSDATE AND SYSDATE+240/(24*60) THEN '1' END),0) PRO_DD_EA
	FROM IM_REQEST WHERE PROGRS_SITTN_CODE <![CDATA[<]]> 'IM03000006'  AND DELETE_AT = 'N'
	<if test="deptCodeSch != null and deptCodeSch != ''">
		AND REQEST_DEPT_CODE = #{deptCodeSch}
	</if> -->
	SELECT 
		<!-- (SELECT COUNT (*)
          FROM IM_REQEST A
         WHERE A.PROGRS_SITTN_CODE = 'IM03000002' AND A.DELETE_AT = 'N'
         <if test="deptCodeSch != null and deptCodeSch != ''">
			AND A.REQEST_DEPT_CODE = #{deptCodeSch}
		 </if> -->
		(SELECT COUNT (*)
          FROM IM_REQEST A
         WHERE A.DELETE_AT = 'N' AND A.REQEST_DTE = TO_CHAR(SYSDATE,'YYYY-MM-DD')
			AND A.BPLC_CODE = <include refid="bplcCode"/>
		 ) ONE,  <!-- 당일 의뢰건수 -->
       (SELECT COUNT (*)
          FROM IM_REQEST A
         WHERE A.PROGRS_SITTN_CODE = 'IM03000002' AND A.DELETE_AT = 'N'
			AND A.BPLC_CODE = <include refid="bplcCode"/>
		 ) TWO,  <!-- 접수 대기 -->
       (SELECT COUNT (*)
          FROM IM_REQEST A
         WHERE A.PROGRS_SITTN_CODE = 'IM03000003' AND A.DELETE_AT = 'N'
			AND A.BPLC_CODE = <include refid="bplcCode"/>
		 ) THR,  <!-- 분석중 -->
       (SELECT COUNT (*)
          FROM IM_REQEST A
          JOIN SY_MTRIL B ON A.MTRIL_SEQNO = B.MTRIL_SEQNO
         WHERE PROGRS_SITTN_CODE = 'IM03000004' AND A.DELETE_AT = 'N'
			AND A.BPLC_CODE = <include refid="bplcCode"/>
		 ) FOU,  <!-- ROA 대기 -->
	   (SELECT COUNT (*)
          FROM IM_REQEST A
          JOIN SY_MTRIL B ON A.MTRIL_SEQNO = B.MTRIL_SEQNO
         WHERE PROGRS_SITTN_CODE = 'IM03000005' AND A.DELETE_AT = 'N'
			AND A.BPLC_CODE = <include refid="bplcCode"/>
		 ) FIV  <!-- COA 대기-->

 	 FROM DUAL
</select>

<!-- 결재 정보 -->
<select id="getAprData" resultType="lims.com.vo.MainVo" parameterType="lims.com.vo.MainVo">
SELECT
	(SELECT COUNT(ORG_CD) FROM BU_ORG_APR 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A01') AND APR_STP = 'P10002') AS COUNT_ORG_APR ,   --<!--의뢰기관 결재-->
	
	(SELECT COUNT(MPKG_CD) FROM BU_MPKG 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A02') AND APR_STP = 'P10002') AS COUNT_PKG_APR ,   --<!--패키지 결재-->
	
	(SELECT COUNT(DISTINCT ORG_CD) FROM BU_ORG_PKG 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A03') AND APR_STP = 'P10002') AS COUNT_ORG_PKG_APR ,    --<!--의뢰기관 패키지 결재-->
	
	(SELECT COUNT(E.SMP_IDX) FROM (SELECT SMP_IDX FROM RC_SMP_ALS 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A04') AND PRCS_CD = 'P020' ) A 
	 LEFT JOIN RC_SMP_ENT E ON A.SMP_IDX = E.SMP_IDX WHERE E.ENT_STP_CD = 'Q020') COUNT_RCP_APR ,    --<!--접수대기 결재-->                 
	
	(SELECT COUNT(SMP_IDX) FROM RC_SMP_ALS 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A05') AND PRCS_CD = 'P060' AND PRCS_STP_CD = 'T010') AS COUNT_DCS_APR ,    --<!--농도 판정 결재-->
	
	(SELECT COUNT(AITM_CD) FROM RC_SMP_AITM 
	 WHERE EXISTS (SELECT APR_CD FROM CM_APR WHERE APR_ID = #{userId} AND APR_CD = 'A06') AND AITM_STP_CD = 'I020') AS COUNT_INE_APR    --<!--결과 검토 결재-->
FROM DUAL
</select>

<!-- 신규 의뢰기관 목록 -->
<select id="getNewOrgList" resultType="lims.com.vo.MainVo">
SELECT
	(SELECT ORG_ABBR FROM BU_ORG WHERE ORG_CD = N.ORG_CD) AS ORG_ABBR,
	NEW_RCP_DT
FROM
	(SELECT ORG_CD, NEW_RCP_DT 
 	 FROM (SELECT ORG_CD, NEW_RCP_DT
 		   FROM BU_NEW_RCP_ORG 
 		   ORDER BY UDT_DATE DESC) 
 	 <![CDATA[WHERE ROWNUM <= 10) N]]>
</select>

<!-- 서류 반송 목록 -->
<select id="getDocReturnList" resultType="lims.com.vo.MainVo">
SELECT 
	(SELECT ORG_ABBR FROM BU_ORG WHERE ORG_CD = E.ORG_CD) AS ORG_ABBR,
     E.SMP_MNG_NO, 
     TO_CHAR(A.RDT_DATE, 'YYYY-MM-DD') AS RDT_DATE
FROM (SELECT SMP_IDX, RDT_DATE 
		  FROM (SELECT SMP_IDX, RDT_DATE 
		  		    FROM RC_SMP_ALS 
		  		    WHERE PRCS_CD = 'P030' 
		  		    AND PRCS_STP_CD = 'T020' 
		  		    ORDER BY RDT_DATE DESC) 
		  <![CDATA[WHERE ROWNUM <= 7) A]]> 
LEFT JOIN RC_SMP_ENT E 
ON A.SMP_IDX = E.SMP_IDX
</select>

<!-- 재검체 요청 목록 -->
<select id="getSampleReturnList" resultType="lims.com.vo.MainVo">
SELECT 
	(SELECT ORG_ABBR FROM BU_ORG WHERE ORG_CD = E.ORG_CD) AS ORG_ABBR,
     E.SMP_MNG_NO, 
     TO_CHAR(A.SRC_DATE, 'YYYY-MM-DD') AS SRC_DATE
FROM (SELECT SMP_IDX, SRC_DATE 
		  FROM (SELECT SMP_IDX, SRC_DATE 
		  		    FROM RC_SMP_ALS 
		  		    WHERE PRCS_CD = 'P030' 
		  		    AND PRCS_STP_CD = 'T030' 
		  		    ORDER BY SRC_DATE DESC) 
		  <![CDATA[WHERE ROWNUM <= 7) A]]> 
LEFT JOIN RC_SMP_ENT E 
ON A.SMP_IDX = E.SMP_IDX
</select>

<!-- 결과보고서 재발행 내역 -->
<select id="getPrtHisList" resultType="lims.com.vo.MainVo">
SELECT 
	SMP_MNG_NO, 
	OUP_DATE, 
	RSPB_REA_CD_NM  
FROM (SELECT 
			E.SMP_MNG_NO, --<!-- 메디젠관리번호  -->
			TO_CHAR(O.OUP_DATE,'YYYY-MM-DD') OUP_DATE, --<!-- 출력일 -->
			FN_GET_CDDTLNM('S26',O.RSPB_REA_CD) RSPB_REA_CD_NM --<!-- 귀책사유명 -->
		FROM RC_SMP_ENT E
		JOIN RC_SMP_ALS A ON E.SMP_IDX = A.SMP_IDX 
		JOIN RR_PRT_CTR C ON A.SMP_IDX = C.SMP_IDX AND A.ENT_SEQ = C.ENT_SEQ
		JOIN RR_PRT_OUP O ON C.SMP_IDX = O.SMP_IDX AND C.ENT_SEQ = O.ENT_SEQ AND C.PRT_CRT_SEQ = O.PRT_CRT_SEQ
		WHERE A.PRCS_CD = 'P090' 
	    AND O.OUP_DIV = 'S35003'
ORDER BY O.OUP_DATE DESC) 
<![CDATA[WHERE ROWNUM <= 13]]> 
</select>

<select id="getUrl" resultType="lims.com.vo.MainVo">
SELECT
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'A00002002' AND HIR_MENU_CD = 'A00002000') AS ORG_APR_URL,    --<!--의뢰기관 결재-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'A00001002' AND HIR_MENU_CD = 'A00001000') AS PKG_APR_URL,   --<!--패키지 결재-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'A00002004' AND HIR_MENU_CD = 'A00002000') AS ORG_PKG_APR_URL,   --<!--의뢰기관 패키지 결재-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'B00001002' AND HIR_MENU_CD = 'B00001000') AS RCP_APR_URL,   --<!--접수 대기-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'C00001003' AND HIR_MENU_CD = 'C00001000') AS DCS_APR_URL,   --<!--농도 판정-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'C00002007' AND HIR_MENU_CD = 'C00002000') AS INE_APR_URL,   --<!--결과 검토-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'A00003005' AND HIR_MENU_CD = 'A00003000') AS NEW_ORG_URL,   --<!--신규 의뢰기관-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'A00003004' AND HIR_MENU_CD = 'A00003000') AS DOC_RETURN_URL,   --<!--서류 반송대장-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'B00001004' AND HIR_MENU_CD = 'B00001000') AS SAMPLE_RETURN_URL,   --<!--검체 재접수-->
	(SELECT MENU_URL FROM SM_MENU WHERE MENU_CD = 'B00002003' AND HIR_MENU_CD = 'B00002000') AS PRT_HIS_URL   --<!--결과보고서 내역-->
FROM DUAL
</select>

<select id="getUserPasswordCheck" resultType="Integer" parameterType="lims.sys.vo.UserMVo">
	SELECT COUNT(*) FROM SY_USER
	WHERE USER_ID = #{userIdPw}
	AND PASSWORD = (SELECT PKG_CRYPTO.ENCRYPT(#{prePassword}) FROM DUAL)
</select>

<update id="saveUserPassword" parameterType="lims.sys.vo.UserMVo">
	UPDATE SY_USER SET
		PASSWORD = (SELECT PKG_CRYPTO.ENCRYPT(#{password}) FROM DUAL)
		,LAST_CHANGER_ID = #{lastChangerId}
		,LAST_CHANGE_DT = SYSDATE
	WHERE USER_ID = #{userIdPw}
</update>

<select id="getUserChangeBestInspctInsttList" parameterType="lims.sys.vo.UserMVo" resultType="lims.sys.vo.UserMVo">
	SELECT INSPCT_INSTT_NM AS KEY, INSPCT_INSTT_CODE AS VALUE
	FROM SY_INSPCT_INSTT 
	WHERE AND USE_AT = 'Y'
	ORDER BY INSPCT_INSTT_NM	
</select>

<select id="getUserChangeInspctInsttList" parameterType="lims.sys.vo.UserMVo" resultType="lims.sys.vo.UserMVo">
	SELECT INSPCT_INSTT_NM AS KEY, INSPCT_INSTT_CODE AS VALUE
	FROM SY_INSPCT_INSTT
	WHERE AND USE_AT = 'Y'
	AND UPPER_INSPCT_INSTT_CODE = #{bestInspctInsttCode}	 
	ORDER BY INSPCT_INSTT_NM	
</select>

<select id="getUserChangeUserList" parameterType="lims.sys.vo.UserMVo" resultType="lims.sys.vo.UserMVo">
	SELECT USER_NM AS KEY, LOGIN_ID||'|'|| PKG_CRYPTO.DECRYPT(PASSWORD) AS VALUE
	FROM SY_USER
	WHERE USE_AT = 'Y'
	AND DEPT_CODE = #{inspctInsttCode}
	AND USER_ID <![CDATA[<>]]> #{userId}
	ORDER BY USER_NM
</select>

<!-- 일일 데이터 -->
<select id="getOneDayCnt" resultType="lims.com.vo.MainVo" parameterType="lims.com.vo.MainVo">
<![CDATA[
SELECT
(SELECT COUNT(RCP_DT) FROM RC_SMP_ALS 
 WHERE TO_DATE(RCP_DT) = TO_DATE(#{rcpDt}) AND PRCS_CD IN ('P040','P050','P060','P070','P080','P090')
 AND PRCS_STP_CD <> 'T090') AS CNT_DAY_RCP,  --일일 접수건수
 
(SELECT COUNT(R.SMP_IDX) FROM (SELECT SMP_IDX, ENT_SEQ FROM RC_SMP_ALS WHERE TO_DATE(RCP_DT) = TO_DATE(#{rcpDt}) AND PRCS_STP_CD <> 'T090') R 
 JOIN (SELECT SMP_IDX, ENT_SEQ FROM RR_PRT_CTR WHERE PRT_CTR_DATE = TO_DATE(#{rcpDt})) A 
 ON R.SMP_IDX = A.SMP_IDX AND R.ENT_SEQ = A.ENT_SEQ) AS CNT_DAY_COMP,  --일일 출력완료 건수
 
(SELECT COUNT(PRCS_CD) FROM RC_SMP_ALS 
 WHERE TO_DATE(RCP_DT) = TO_DATE(#{rcpDt}) 
 AND PRCS_CD IN ('P040','P050','P060','P070','P080','P090')
 AND PRCS_STP_CD <> 'T090' AND DUE_DT IS NOT NULL) AS CNT_DELIV, --전체 출고 예정 건수(임시[ ( 추출지시~결과보고서 작성 단계 and not 취소 상태 and 결과예정일이 not null ) ], 추후 변경)
 
(SELECT NVL(ROUND(COUNT(A.AITM_CD)/DECODE(COUNT(R.SMP_IDX), 0, NULL, ROUND(COUNT(DISTINCT R.SMP_IDX),1)), 1), 0) 
 FROM (SELECT SMP_IDX, ENT_SEQ FROM RC_SMP_ALS WHERE TO_DATE(RCP_DT) = TO_DATE(#{rcpDt}) AND PRCS_CD IN ('P040','P050','P060','P070','P080','P090') AND PRCS_STP_CD <> 'T090') R
 JOIN RC_SMP_AITM A 
 ON R.SMP_IDX = A.SMP_IDX AND R.ENT_SEQ = A.ENT_SEQ) AS AVG_AITM  --일일 의뢰평균 검사항목 갯수
 
FROM DUAL
]]>
</select>

<!-- 전국 매출 총계 -->
<select id="getTotalSale" resultType="lims.com.vo.MainVo">
WITH T AS 
(
	SELECT A.RCP_DT, ROUND(M.PKG_COST/1000) AS PKG_COST FROM RC_SMP_ALS A JOIN RC_SMP_MPKG M ON A.SMP_IDX = M.SMP_IDX AND A.ENT_SEQ = M.ENT_SEQ  WHERE PRCS_CD IN ('P040','P050','P060','P070','P080','P090')
)
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(SUM(PKG_COST))), '([0-9]{3})','\1,')), '^,',''), 0) AS TOTAL
	FROM T
UNION ALL
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(SUM(PKG_COST))), '([0-9]{3})','\1,')), '^,',''), 0) AS TOTAL
	FROM T WHERE RCP_DT BETWEEN SYSDATE-30 AND SYSDATE
UNION ALL
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(SUM(PKG_COST))), '([0-9]{3})','\1,')), '^,',''), 0) AS TOTAL
	FROM T WHERE RCP_DT = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
</select>

<!-- 지역별 매출 -->
<select id="getAreaSale" resultType="lims.com.vo.MainVo">
WITH T AS 
(
	SELECT B.AREA_CD, A.SMP_IDX, A.RCP_DT, M.PKG_COST
	FROM BU_ORG B
	JOIN RC_SMP_ENT E ON B.ORG_CD = E.ORG_CD 
	JOIN RC_SMP_ALS A ON E.SMP_IDX = A.SMP_IDX 
	JOIN RC_SMP_MPKG M ON A.SMP_IDX = M.SMP_IDX AND A.ENT_SEQ = M.ENT_SEQ WHERE A.PRCS_CD IN ('P040','P050','P060','P070','P080','P090')
)
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(SEOUL/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS SEOUL, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONGGI/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONGGI, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GANGWON/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GANGWON, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_BUK, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_NAM, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHEJU/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHEJU 
	FROM 
	(SELECT AREA_CD, PKG_COST FROM T) -- <!-- 지역별 누적 매출 -->
	PIVOT
	(
	SUM(PKG_COST) FOR AREA_CD 
	IN ('S04001' AS SEOUL, 'S04002' AS GYEONGGI, 'S04003' AS GANGWON, 'S04004' AS CHUNG_BUK, 'S04005' AS CHUNG_NAM, 
		'S04006' AS JEOL_BUK, 'S04007' AS JEOL_NAM, 'S04008' AS GYEONG_BUK, 'S04009' AS GYEONG_NAM, 'S04010' AS CHEJU
	))
	
UNION ALL
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(SEOUL/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS SEOUL, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONGGI/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONGGI, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GANGWON/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GANGWON, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_BUK, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_NAM, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHEJU/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHEJU 
	FROM 
	(SELECT AREA_CD, PKG_COST FROM T WHERE RCP_DT BETWEEN SYSDATE-30 AND SYSDATE) -- <!-- 지역별 월별 매출 -->
	PIVOT
	(
	SUM(PKG_COST) FOR AREA_CD 
	IN ('S04001' AS SEOUL, 'S04002' AS GYEONGGI, 'S04003' AS GANGWON, 'S04004' AS CHUNG_BUK, 'S04005' AS CHUNG_NAM, 
		'S04006' AS JEOL_BUK, 'S04007' AS JEOL_NAM, 'S04008' AS GYEONG_BUK, 'S04009' AS GYEONG_NAM, 'S04010' AS CHEJU
	))
	
UNION ALL
	SELECT 
		NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(SEOUL/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS SEOUL, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONGGI/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONGGI, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GANGWON/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GANGWON, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_BUK, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHUNG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHUNG_NAM, 
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(JEOL_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS JEOL_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_BUK/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_BUK,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(GYEONG_NAM/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS GYEONG_NAM,
	    NVL(REGEXP_REPLACE(REVERSE(REGEXP_REPLACE( REVERSE(TO_CHAR(ROUND(CHEJU/1000))), '([0-9]{3})','\1,')), '^,',''), 0) AS CHEJU 
	FROM 
	(SELECT AREA_CD, PKG_COST FROM T WHERE RCP_DT = TO_CHAR(SYSDATE, 'YYYY-MM-DD')) -- <!-- 지역별 일별 매출 -->
	PIVOT
	(
	SUM(PKG_COST) FOR AREA_CD 
	IN ('S04001' AS SEOUL, 'S04002' AS GYEONGGI, 'S04003' AS GANGWON, 'S04004' AS CHUNG_BUK, 'S04005' AS CHUNG_NAM, 
		'S04006' AS JEOL_BUK, 'S04007' AS JEOL_NAM, 'S04008' AS GYEONG_BUK, 'S04009' AS GYEONG_NAM, 'S04010' AS CHEJU
	))
	
UNION ALL
	SELECT 
		NVL(TO_CHAR(SEOUL), 0) AS SEOUL, 
		NVL(TO_CHAR(GYEONGGI), 0) AS GYEONGGI, 
		NVL(TO_CHAR(GANGWON), 0) AS GANGWON, 
		NVL(TO_CHAR(CHUNG_BUK), 0) AS CHUNG_BUK, 
		NVL(TO_CHAR(CHUNG_NAM), 0) AS CHUNG_NAM, 
		NVL(TO_CHAR(JEOL_BUK), 0) AS JEOL_BUK, 
		NVL(TO_CHAR(JEOL_NAM), 0) AS JEOL_NAM, 
		NVL(TO_CHAR(GYEONG_BUK), 0) AS GYEONG_BUK, 
		NVL(TO_CHAR(GYEONG_NAM), 0) AS GYEONG_NAM, 
		NVL(TO_CHAR(CHEJU), 0) 
	FROM 
    (SELECT AREA_CD, SMP_IDX FROM T WHERE RCP_DT = TO_CHAR(SYSDATE, 'YYYY-MM-DD')) -- <!-- 지역별 일별 접수건 -->
	PIVOT
	(
	COUNT(SMP_IDX) FOR AREA_CD 
	IN ('S04001' AS SEOUL, 'S04002' AS GYEONGGI, 'S04003' AS GANGWON, 'S04004' AS CHUNG_BUK, 'S04005' AS CHUNG_NAM, 
		'S04006' AS JEOL_BUK, 'S04007' AS JEOL_NAM, 'S04008' AS GYEONG_BUK, 'S04009' AS GYEONG_NAM, 'S04010' AS CHEJU
	))
</select>

<!-- 메인화면 공지사항 조회 -->
<select id="getBbsList" resultType="lims.com.vo.MainVo">
		WITH WA AS (
	        SELECT *
	        FROM (SELECT 1 AS ORDNO, SNTNC_SEQNO
	                ,BBS_CODE
	                ,WRTER_ID
	                ,WRTER_NM
	                ,WRITNG_DE
	                ,SJ
	                ,CN
	                ,DATA AS BLOB_CN
	                ,EMAIL
	                ,INQIRE_CNT
	                ,POPUP_AT
	                ,POPUP_BEGIN_DE
	                ,POPUP_END_DE
	                ,ATCHMNFL_SEQNO
	                ,DELETE_AT
	            FROM SY_BBS_SNTNC
	            WHERE BBS_CODE = '0000000001'
	            AND DELETE_AT = 'N'
	            AND POPUP_AT = 'Y'
	            AND POPUP_BEGIN_DE <![CDATA[<= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	            AND POPUP_END_DE <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	            ORDER BY POPUP_BEGIN_DE DESC, WRITNG_DE DESC
	        )
	        UNION ALL
	        SELECT *
	        FROM (
	            SELECT 2 AS ORDNO, SNTNC_SEQNO
	                    ,BBS_CODE
	                    ,WRTER_ID
	                    ,WRTER_NM
	                    ,WRITNG_DE
	                    ,SJ
	                    ,CN
	                    ,DATA AS BLOB_CN
	                    ,EMAIL
	                    ,INQIRE_CNT
	                    ,POPUP_AT
	                    ,POPUP_BEGIN_DE
	                    ,POPUP_END_DE
	                    ,ATCHMNFL_SEQNO
	                    ,DELETE_AT
	            FROM SY_BBS_SNTNC
	            WHERE BBS_CODE = '0000000001'
	            AND DELETE_AT = 'N'
	            AND NVL(POPUP_END_DE, TO_CHAR(SYSDATE-1, 'YYYY-MM-DD')) <![CDATA[< ]]> TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	            ORDER BY NVL(POPUP_BEGIN_DE,0) DESC,SNTNC_SEQNO DESC, WRITNG_DE DESC
	        ) 
        )
        SELECT * FROM WA
        WHERE ROWNUM <![CDATA[<=]]> 10
        ORDER BY ORDNO ASC,SNTNC_SEQNO DESC,WRITNG_DE DESC, POPUP_BEGIN_DE DESC

</select>

<!--  메인화면 팀별의뢰건수(전월,당월) -->	
	<select id="gettcmList" parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo">
		SELECT 
		    A.INSPCT_INSTT_NM AS MANAGEDEPTNM, NVL(B.LNUM, 0) AS LNUM, NVL(B.CNUM, 0) AS CNUM
		FROM SY_INSPCT_INSTT A
		LEFT OUTER JOIN (
		        SELECT  
		            SUM(CASE WHEN IR.REQEST_DTE BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'), -1 ) AND LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE,'MM'), -1 )) THEN 1 ELSE 0 END)  LNUM,        
		            SUM(CASE WHEN IR.REQEST_DTE BETWEEN TRUNC(SYSDATE,'MM') AND LAST_DAY(TRUNC(SYSDATE,'MM')) THEN 1 ELSE 0 END) CNUM,
		            IR.REQEST_DEPT_CODE
		    FROM IM_REQEST IR
		    WHERE IR.REQEST_DTE BETWEEN ADD_MONTHS(TRUNC(SYSDATE,'MM'), -1 ) AND LAST_DAY(TRUNC(SYSDATE,'MM')) AND IR.DELETE_AT = 'N'
		    GROUP BY IR.REQEST_DEPT_CODE
		) B ON A.INSPCT_INSTT_CODE =  B.REQEST_DEPT_CODE 
		WHERE A.USE_AT='Y' 
		AND A.DELETE_AT='N' 
		AND A.ANALS_AT='Y'
		AND A.MMNY_SE_CODE ='SY01000001'
		ORDER BY A.INSPCT_INSTT_NM
	</select>
	
	
	<!--  메인화면 이상목록(전월,당월) -->	
	<select id="getIsscList" parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo">
		SELECT 
	REQEST_SEQNO,
	BPLC_CODE,
	(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = BPLC_CODE) AS BPLC_NM,
	REQEST_NO,
	INSPCT_TY_CODE,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = INSPCT_TY_CODE) AS INSPCT_TY_NM,
	LOT_NO,
	REQEST_DTE,
	MNFCTUR_DTE,
	EMRGNCY_AT,
	RCEPT_DT,
	ANALS_COMPT_PREARNGE_DT,
	PROGRS_SITTN_CODE
	FROM IM_REQEST  
	WHERE ANALS_COMPT_PREARNGE_DT BETWEEN  SYSTIMESTAMP -2/24 and SYSTIMESTAMP +2/24
	AND PROGRS_SITTN_CODE ='IM03000003'
	AND BPLC_CODE = <include refid="bplcCode"/>
	</select>
	
	<select id="getInspctList" parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo" >
	SELECT REICC.EQPMN_SEQNO,
	RE.EQPMN_NM,
	(SELECT CUSTLAB_NM FROM RS_CUSTLAB WHERE  CUSTLAB_SEQNO= RE.CUSTLAB_SEQNO) as CUSTLAB_SEQNO_NM,
	(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = RE.BPLC_CODE) AS BPLC_CODE_NM,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE =INSPCT_CRRCT_SE_CODE) AS INSPCT_CRRCT_SE_NM ,
	REICC.INSPCT_CRRCT_CYCLE ||( SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = REICC.CYCLE_CODE) AS CYCLE_NM,
	REICC.INSPCT_CRRCT_PREARNGE_DTE
	FROM RS_EQPMN_INSPCT_CRRCT_CYCLE REICC
	JOIN RS_EQPMN RE ON  RE.EQPMN_SEQNO=REICC.EQPMN_SEQNO
	WHERE RE.DELETE_AT = 'N' AND 
 	REICC.INSPCT_CRRCT_PREARNGE_DTE IS NOT NULL
 	<if test="tab2Begindte != null and tab2Begindte != '' and  tab2Enddte != null and tab2Enddte != '' ">
 	 AND INSPCT_CRRCT_PREARNGE_DTE BETWEEN  #{tab2Begindte}  AND #{tab2Enddte}
 	</if>
		AND RE.BPLC_CODE = <include refid="bplcCode"/>
 	   ORDER BY BPLC_CODE_NM,EQPMN_SEQNO
	</select>
	
	<select id="getPrductList"  parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo">
	SELECT CUSTLAB_SEQNO,
    PRDUCT_SEQNO,
 	BPLC_CODE,
	(SELECT CUSTLAB_NM FROM RS_CUSTLAB WHERE  CUSTLAB_SEQNO= RS.CUSTLAB_SEQNO) as CUSTLAB_SEQNO_NM,
 	(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = BPLC_CODE) AS BPLC_CODE_NM,
 	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = PRDUCT_CL_CODE) AS PRDUCT_CL_NM,
 	PRDUCT_NM,
 	PROPRT_INVNTRY_QY,
 	NVL(NOW_INVNTRY_QY,0) as NOW_INVNTRY_QY
	FROM  RS_PRDUCT RS
	WHERE NVL(PROPRT_INVNTRY_QY,0) <![CDATA[>]]> NVL(NOW_INVNTRY_QY,0)
		AND BPLC_CODE = <include refid="bplcCode"/> AND RS.DELETE_AT ='N'
	<if test="custlabSeqno !=null and custlabSeqno !=''">
		AND CUSTLAB_SEQNO = #{custlabSeqno}
	</if>
		ORDER BY CUSTLAB_SEQNO, PRDUCT_CL_NM
	</select>
	
	<select id="getValidList" parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo">
	SELECT RP.PRDUCT_NM,
	(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = RP.BPLC_CODE) AS BPLC_CODE_NM,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = RP.PRDUCT_CL_CODE) AS PRDUCT_CL_NM ,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = RPWB.WRHSDLVR_SE_CODE) AS WRHSDLVR_SE_NM,
	RPWB.BRCD,
	RPWB.VALID_DTE
	FROM RS_PRDUCT_WRHSDLVR_BRCD RPWB
	JOIN RS_PRDUCT RP ON RP.PRDUCT_SEQNO = RPWB.PRDUCT_SEQNO
	WHERE RPWB.DELETE_AT='N'AND RP.DELETE_AT ='N' AND RPWB.VALID_DTE IS NOT NULL AND RP.USE_AT='Y'
	AND TO_DATE(RPWB.VALID_DTE,'YYYY-MM-DD') <![CDATA[<]]> SYSDATE-1
	AND RPWB.WRHSDLVR_SE_CODE NOT IN ( 'RS08000003')
		AND RP.BPLC_CODE = <include refid="bplcCode"/>
	UNION
	SELECT RP.PRDUCT_NM,
	(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = RP.BPLC_CODE) AS BPLC_CODE_NM,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = RP.PRDUCT_CL_CODE)AS PRDUCT_CL_NM ,
	(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = RPWB.WRHSDLVR_SE_CODE)AS WRHSDLVR_SE_NM,
	RPWB.BRCD,
	RPWB.VALID_DTE FROM RS_PRDUCT_WRHSDLVR_BRCD RPWB
	JOIN RS_PRDUCT RP ON RP.PRDUCT_SEQNO = RPWB.PRDUCT_SEQNO
	WHERE RPWB.DELETE_AT='N'AND RP.DELETE_AT ='N' AND RPWB.VALID_DTE IS NOT NULL AND RP.USE_AT='Y'
    AND RPWB.WRHSDLVR_SE_CODE NOT IN ( 'RS08000003')
	 <if test="tab4Begindte != null and tab4Begindte != '' and  tab4Enddte != null and tab4Enddte != '' ">
 	 AND RPWB.VALID_DTE BETWEEN  #{tab4Begindte}  AND #{tab4Enddte}
 	</if>
		AND RP.BPLC_CODE = <include refid="bplcCode"/>
	 ORDER BY  VALID_DTE
	</select>
	<select id="getRefromList"   parameterType="lims.com.vo.MainVo" resultType="lims.com.vo.MainVo">
		SELECT EDC_SJ,
			   BPLC_CODE,
			   (SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = BPLC_CODE) AS BPLC_NM,
		       EDC_SE_CODE,
			   (SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = EDC_SE_CODE) AS EDC_SE_CODE_NM ,
		       NXTTRM_EDC_DTE,
		       EDC_INSTT_NM FROM RS_EDC
		WHERE NXTTRM_EDC_TRGET_AT ='Y' AND DELETE_AT = 'N'
		AND BPLC_CODE = <include refid="bplcCode"/>
	ORDER BY EDC_SJ
	</select>
<!-- 메인화면 부재자 현황 -->
<select id="getAbsntList" resultType="lims.com.vo.MainVo">
	SELECT
       A.ABSNT_ID
      , B.USER_NM AS ABSNTNM
      , B.DEPT_CODE AS ABSNTIIC
      , D.INSPCT_INSTT_NM AS ABSNTDEPT
      , A.AGNCYMAN_ID
      , C.USER_NM AS AGNCYMAN
      , C.DEPT_CODE AS AGNCYMANIIC
      , D.INSPCT_INSTT_NM AS AGNCYMANDEPT
      , A.ABSNCE_STTUS_CODE
      , (SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = A.ABSNCE_STTUS_CODE) AS ABSNCESTTUSNM
      , TO_CHAR(TO_DATE(A.ABSNCE_BEGIN_DT), 'YYYY-MM-DD') AS ABSNCE_BEGIN_DT
      , TO_CHAR(TO_DATE(A.ABSNCE_END_DT), 'YYYY-MM-DD') AS ABSNCE_END_DT
      , TO_CHAR(TO_DATE(A.ABSNCE_BEGIN_DT), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(A.ABSNCE_END_DT), 'YYYY-MM-DD') AS ABSNCEDT
      , A.ABSNCE_RESN
      , A.USE_AT 
      , CASE WHEN A.USE_AT = 'Y' 
      			AND A.ABSNCE_BEGIN_DT  <![CDATA[<=]]>  TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
      			AND A.ABSNCE_END_DT  <![CDATA[>=]]>  TO_CHAR(SYSDATE, 'YYYY-MM-DD')
      	THEN
            'O'
        ELSE
              'X'
        END AS COMBACK_AT
    FROM SY_ABSNCE A
    INNER JOIN SY_USER B ON A.ABSNT_ID = B.USER_ID
    INNER JOIN SY_INSPCT_INSTT D ON B.DEPT_CODE = D.INSPCT_INSTT_CODE
    INNER JOIN SY_USER C ON A.AGNCYMAN_ID = C.USER_ID
    INNER JOIN SY_INSPCT_INSTT E ON C.DEPT_CODE = E.INSPCT_INSTT_CODE
    WHERE 1=1
    AND B.INSPCT_INSTT_CODE =  #{inspctInsttCode}
    <![CDATA[
	        AND A.USE_AT = 'Y'
			AND A.ABSNCE_BEGIN_DT <= TO_CHAR(SYSDATE, 'YYYY-MM-DD') 
			AND A.ABSNCE_END_DT >= TO_CHAR(SYSDATE, 'YYYY-MM-DD')
	]]>
    ORDER BY A.ABSNCE_BEGIN_DT DESC
</select>

<!-- 메인화면 이번달 의뢰건수  -->
<select id="getJobrealmctn" resultType="lims.com.vo.MainVo">
	<!-- SELECT COUNT((SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = IR.JOB_REALM_CODE)) AS JOBREALMCTN
        , (SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = IR.JOB_REALM_CODE) AS JOBREALMNM
        , IR.JOB_REALM_CODE -->
    SELECT 
    	MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000001' THEN 1 ELSE 0 END)) AS WATERQUALITY
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000002' THEN 1 ELSE 0 END)) AS WASTE
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000003' THEN 1 ELSE 0 END)) AS AIR
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000004' THEN 1 ELSE 0 END)) AS STINK
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000005' THEN 1 ELSE 0 END)) AS NOISE
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000006' THEN 1 ELSE 0 END)) AS INDOORAIR
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000007' THEN 1 ELSE 0 END)) AS DIOXIN
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000008' THEN 1 ELSE 0 END)) AS EARTH
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000009' THEN 1 ELSE 0 END)) AS OCEAN
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000010' THEN 1 ELSE 0 END)) AS PCBS
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000011' THEN 1 ELSE 0 END)) AS ASBESTOS
        , MAX(SUM(CASE WHEN JOB_REALM_CODE = 'IM02000012' THEN 1 ELSE 0 END)) AS OTHER
	FROM IM_REQEST
	WHERE INSPCT_INSTT_CODE = #{inspctInsttCode} 
	AND EXPER_DEFER_AT = 'N'
	AND DELETE_AT = 'N' 
	AND REQEST_SEQNO IN (SELECT REQEST_SEQNO
                        FROM IM_SPLORE
                        WHERE DELETE_AT = 'N')
	<if test="receiptDteStart == null or receiptDteStart == '' and receiptDteFinish == null or receiptDteFinish == '' ">
		AND REQEST_DTE <![CDATA[ >= ]]> (SELECT TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') FROM DUAL)
	</if>
       <if test="receiptDteStart != null and receiptDteStart != '' ">
		AND REQEST_DTE <![CDATA[ >= ]]> #{receiptDteStart}
	</if>
	<if test="receiptDteFinish != null and receiptDteFinish != '' ">
		AND REQEST_DTE <![CDATA[ <= ]]> #{receiptDteFinish}
	</if>
	GROUP BY JOB_REALM_CODE
</select>

<!--  처리기한 임박건수 -->
<select id="getTimelimit" resultType="lims.com.vo.MainVo">
	SELECT COUNT(*) AS TIMELIMIT
	FROM ( SELECT IR.REQEST_SEQNO AS TIMELIMIT
    			FROM IM_REQEST IR
    			LEFT OUTER JOIN IM_SPLORE IMS ON IR.REQEST_SEQNO = IMS.REQEST_SEQNO
    			WHERE IMS.PROCESS_TMLMT IS NOT NULL
    			AND INSPCT_INSTT_CODE = #{inspctInsttCode} 
    			AND IR.EXPER_DEFER_AT = 'N'
    			AND IR.DELETE_AT = 'N' 
    			AND IMS.DELETE_AT = 'N'
    			AND (SELECT TO_CHAR(SYSDATE - 3,'YYYY-MM-DD')  FROM DUAL) <![CDATA[<=]]>  (TO_DATE(IMS.PROCESS_DTE, 'YYYY-MM-DD'))
    			AND (SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD')  FROM DUAL) <![CDATA[>=]]> (TO_DATE(IMS.PROCESS_DTE, 'YYYY-MM-DD'))
    			GROUP BY IR.REQEST_SEQNO
    		) A
    WHERE A.TIMELIMIT > 0
   
</select>

<!-- 우리부서 진행현황 -->
<select id="getRequestProgress" resultType="lims.com.vo.MainVo">
	SELECT 
	     MAX(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000001' THEN 1 ELSE 0 END)) AS REQUEST
	     ,MAX(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000002' THEN 1 ELSE 0 END)) AS COLLECT
	     ,MAX(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000004' THEN 1 ELSE 0 END)) AS RECEIPT
	     ,MAX(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000005' THEN 1 ELSE 0 END)) AS ANALYSIS 
	     ,MAX(SUM(CASE WHEN PROGRS_SITTN_CODE = 'IM03000008' THEN 1 ELSE 0 END)) AS APPROVAL
	FROM IM_REQEST
	WHERE INSPCT_INSTT_CODE = #{deptCode}
	AND EXPER_DEFER_AT = 'N'
    AND DELETE_AT = 'N'
	GROUP BY PROGRS_SITTN_CODE
</select>

<select id="getRequestMainPopupList" resultType="lims.com.vo.MainVo">
	SELECT DISTINCT
            IP.REQEST_SEQNO
            ,IP.INSPCT_INSTT_CODE
            ,IP.EXPR_PURPS_CODE
            ,(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = IP.EXPR_PURPS_CODE) EXPR_PURPS_NM
            ,IP.JOB_REALM_CODE
            ,(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = IP.JOB_REALM_CODE) JOB_REALM_NM
            ,IP.REQEST_NO
            ,IP.REQEST_DTE
            ,IP.REQEST_DEPT_CODE
            ,(SELECT INSPCT_INSTT_NM FROM SY_INSPCT_INSTT WHERE INSPCT_INSTT_CODE = IP.REQEST_DEPT_CODE) REQEST_DEPT_NM
            ,(SELECT USER_NM FROM SY_USER WHERE USER_ID = IP.CLIENT_ID) AS CLIENTID
            ,IP.GRDCRT_RECPT_MTH_CODE
            ,IP.SPLORE_CO
            ,IP.EXPRIEM_CO
            ,IP.BSRP_FEE
            ,IP.TOT_FEE
            ,IP.FEE_OPRTOR_CODE
            ,IP.DSCNT_RT
            ,IP.FEE_DSCNT_UNIT_CODE
            ,IP.VAT_AM
            ,IP.FEE_UPDT_AT
            ,IP.FEE_PAY_STLE_CODE
            ,IP.TAXBIL_PBLICTE_AT
            ,IP.FEE_PAY_AT
            ,IP.FEE_RCPMNY_DTE
            ,IP.RQSTDOC_RM
            ,IP.RM
            ,IP.DELETE_AT
            ,IP.PROGRS_SITTN_CODE
            ,IP.VAT_AT
            ,(SELECT CMMN_CODE_NM FROM SY_CMMN_CODE WHERE CMMN_CODE = IP.PROGRS_SITTN_CODE) PROGRS_SITTN_NM
            ,IP.IPCSS_BSNS_SEQNO
            ,(SELECT CASE
                      WHEN B.IPCSS_BSNS_DETAIL_NM IS NULL THEN A.IPCSS_BSNS_NM
                      ELSE A.IPCSS_BSNS_NM || ' - ' || B.IPCSS_BSNS_DETAIL_NM
                   END
              FROM    SY_IPCSS_BSNS A
                   JOIN
                      SY_IPCSS_BSNS_DETAIL B
                   ON A.IPCSS_BSNS_SEQNO = B.IPCSS_BSNS_SEQNO
             WHERE B.IPCSS_BSNS_SEQNO = IP.IPCSS_BSNS_SEQNO AND B.IPCSs_BSNS_DETAIL_SEQNO = IP.IPCSS_BSNS_DETAIL_SEQNO) IPCSS_BSNS_NM
            ,IP.IPCSS_BSNS_DETAIL_SEQNO
            ,IP.PRQUDO_SEQNO
            ,(SELECT PRQUDO_NM FROM IM_PRQUDO WHERE PRQUDO_SEQNO = IP.PRQUDO_SEQNO) PRQUDO_NM
        FROM IM_REQEST IP
        LEFT OUTER JOIN IM_SPLORE IMS ON IP.REQEST_SEQNO = IMS.REQEST_SEQNO
        WHERE 1=1
        AND IP.DELETE_AT = 'N' 
        AND IMS.DELETE_AT = 'N'
        AND IP.INSPCT_INSTT_CODE =  #{inspctInsttCode}
        AND IP.EXPER_DEFER_AT = 'N'
       
        <if test=" timelimitCtn == null or timelimitCtn == ''">
        	<choose>
				<when test="receiptDteStart == null or receiptDteStart == '' and receiptDteFinish == null or receiptDteFinish == ''">
					AND IP.REQEST_DTE <![CDATA[ >= ]]> (SELECT TO_CHAR(ADD_MONTHS(SYSDATE,-1),'YYYY-MM-DD') FROM DUAL)
				</when>
				<when test="receiptDteStart != null and receiptDteStart != '' or receiptDteFinish != null and receiptDteFinish != ''">
					AND IP.REQEST_DTE <![CDATA[ >= ]]> #{receiptDteStart}
					AND IP.REQEST_DTE <![CDATA[ <= ]]> #{receiptDteFinish}
				</when>
			</choose>
        </if>
		
		<if test="jobRealmCode != null and jobRealmCode != '' ">
			AND IP.JOB_REALM_CODE = #{jobRealmCode}
		</if>
		<if test="timelimitCtn != null and timelimitCtn != '' ">
			AND (SELECT TO_CHAR(SYSDATE - 3,'YYYY-MM-DD')  FROM DUAL) <![CDATA[<=]]>  (TO_DATE(IMS.PROCESS_DTE, 'YYYY-MM-DD'))
    		AND (SELECT TO_CHAR(SYSDATE,'YYYY-MM-DD')  FROM DUAL) <![CDATA[>=]]> (TO_DATE(IMS.PROCESS_DTE, 'YYYY-MM-DD'))
		</if>
		ORDER BY IP.PROGRS_SITTN_CODE, IP.REQEST_NO ASC
</select>
    
	<select id="getMhrlsEdayChckList" resultType="lims.rsc.vo.EqpmnEdayChckDto">
		SELECT 
			F.CMMN_CODE_NM INSPCT_CRRCT_SE_CODE_NM,
			D.MHRLS_NM,
			E.CMMN_CODE_NM MHRLS_CL_CODE_NM,
			D.RECENT_INSPCT_CRRCT_DTE,
			D.INSPCT_CRRCT_PREARNGE_DTE
		FROM RS_MHRLS_EDAY_CHCK A
		JOIN RS_MHRLS_EDAY_CHCK_REQEST B ON A.MHRLS_EDAY_CHCK_SEQNO = B.MHRLS_EDAY_CHCK_SEQNO
		JOIN IM_REQEST C ON B.REQEST_SEQNO = C.REQEST_SEQNO
		JOIN RS_MHRLS D ON C.MHRLS_SEQNO = D.MHRLS_SEQNO
		LEFT JOIN SY_CMMN_CODE E ON E.CMMN_CODE = D.MHRLS_CL_CODE
		LEFT JOIN SY_CMMN_CODE F ON F.CMMN_CODE = A.INSPCT_CRRCT_SE_CODE
		WHERE (
				D.INSPCT_CRRCT_PREARNGE_DTE BETWEEN SYSDATE AND ADD_MONTHS(SYSDATE,1) 
				OR D.INSPCT_CRRCT_PREARNGE_DTE <![CDATA[<]]> SYSDATE
			  )
		ORDER BY D.INSPCT_CRRCT_PREARNGE_DTE
	</select>
	
	<select id="getOnlineParticleList" resultType="lims.src.vo.ImpartclLogMVo">
		SELECT
		    B.CMMN_CODE_NM PARTCL_SE_CODE_NM,
		    A.MESURE_DT,
		    CASE WHEN A.MESURE_EXPRIEM_NM = 'MESURE1_VALUE' THEN '0.2u'
		        WHEN A.MESURE_EXPRIEM_NM = 'MESURE2_VALUE' THEN '0.3u'
		        WHEN A.MESURE_EXPRIEM_NM = 'MESURE3_VALUE' THEN '0.5u'
		        WHEN A.MESURE_EXPRIEM_NM = 'MESURE4_VALUE' THEN '1.0u' 
		    END MESURE_EXPRIEM_NM,
		    A.MESURE_VALUE
		FROM (
		    SELECT*FROM 
		    IM_PARTCL_MNTRNG A
		    UNPIVOT(
		        MESURE_VALUE
		        FOR
		        MESURE_EXPRIEM_NM IN(MESURE1_VALUE, MESURE2_VALUE, MESURE3_VALUE,MESURE4_VALUE)
		    )
		)A
		LEFT JOIN 
		    SY_CMMN_CODE B  ON A.PARTCL_SE_CODE = B.CMMN_CODE
<!-- 		WHERE A.MESURE_DT BETWEEN SYSDATE - 10 / (24*60) AND SYSDATE -->
		WHERE A.MESURE_DT BETWEEN SYSDATE -7 AND SYSDATE
			AND A.MESURE_VALUE <![CDATA[>=]]> 80
	</select>
	
	<select id="getConStandList" resultType="lims.rsc.vo.CmpdsUseMVo">
		SELECT * FROM(
			SELECT
				A.MHRLS_CMPDS_SEQNO,
			    A.CHRG_TEAM_SE_CODE, 
			    B.CMMN_CODE_NM AS CHTEAM, 
			    A.MHRLS_CMPDS_SE_CODE,
			    C.CMMN_CODE_NM AS MHRRGNT,
			    A.MHRLS_CL_CODE, 
			    D.CMMN_CODE_NM AS MHRKINDS,
			    A.CMPDS_NM AS CMRGNM, 
			    A.VALID_DTE,
			    A.DELETE_AT 
			FROM RS_MHRLS_CMPDS A
			LEFT JOIN SY_CMMN_CODE B ON A.CHRG_TEAM_SE_CODE = B.CMMN_CODE
			LEFT JOIN SY_CMMN_CODE C ON C.CMMN_CODE = A.MHRLS_CMPDS_SE_CODE
			LEFT JOIN SY_CMMN_CODE D ON D.CMMN_CODE = A.MHRLS_CL_CODE
			   WHERE VALID_DTE BETWEEN SYSDATE AND ADD_MONTHS(SYSDATE,1) OR VALID_DTE <![CDATA[<]]> SYSDATE
			   AND DSUSE_DTE IS NULL
			UNION ALL
			SELECT
				A.STD_MTTR_SEQNO,
			    A.CHRG_TEAM_SE_CODE, 
			    B.CMMN_CODE_NM, 
			    A.RGNT_SE_CODE,
			    C.CMMN_CODE_NM,
			    A.RGNT_KND_CODE,
			    D.CMMN_CODE_NM,
			    A.RGNT_NM, 
			    A.VALID_DTE,
			    A.DELETE_AT 
			FROM RS_STD_MTTR A
			LEFT JOIN SY_CMMN_CODE B ON A.CHRG_TEAM_SE_CODE = B.CMMN_CODE
			LEFT JOIN SY_CMMN_CODE C ON C.CMMN_CODE = A.RGNT_SE_CODE
			LEFT JOIN SY_CMMN_CODE D ON D.CMMN_CODE = A.RGNT_KND_CODE
			   WHERE VALID_DTE BETWEEN SYSDATE AND ADD_MONTHS(SYSDATE,1) OR VALID_DTE <![CDATA[<]]> SYSDATE
			   AND DSUSE_DTE IS NULL
			) WHERE DELETE_AT='N' ORDER BY CHTEAM ASC, VALID_DTE ASC
			   
	</select>

	<select id="getBbsData" parameterType="hashmap" resultType="hashmap">
		SELECT
			SNTNC_SEQNO
			,SJ
			,WRTER_NM
			,WRITNG_DE
			,EMAIL
			,CN
			,DATA AS BLOB_CN
			,ATCHMNFL_SEQNO
		FROM SY_BBS_SNTNC A
		WHERE SNTNC_SEQNO = #{sntncSeqno}
	</select>



</mapper>
